<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oa.mapper.EmployeesMapper">
  <resultMap id="BaseResultMap" type="com.oa.bean.Employees">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="e_account" jdbcType="VARCHAR" property="eAccount" />
    <result column="e_id" jdbcType="VARCHAR" property="eId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="e_password" jdbcType="VARCHAR" property="ePassword" />
    <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="dept" jdbcType="VARCHAR" property="dept" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="low_salary" jdbcType="DOUBLE" property="lowSalary" />
    <result column="contract_num" jdbcType="VARCHAR" property="contractNum" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, e_account, e_id, name, age, sex, e_password, id_card_no, phone_num, email, bank_account, 
    dept, position, low_salary, contract_num, grade_id
  </sql>
  <select id="selectByExample" parameterType="com.oa.bean.EmployeesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employees
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employees
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oa.bean.EmployeesExample">
    delete from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oa.bean.Employees">
    insert into employees (id, e_account, e_id, 
      name, age, sex, e_password, 
      id_card_no, phone_num, email, 
      bank_account, dept, position, 
      low_salary, contract_num, grade_id
      )
    values (#{id,jdbcType=INTEGER}, #{eAccount,jdbcType=VARCHAR}, #{eId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{ePassword,jdbcType=VARCHAR}, 
      #{idCardNo,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{bankAccount,jdbcType=VARCHAR}, #{dept,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{lowSalary,jdbcType=DOUBLE}, #{contractNum,jdbcType=VARCHAR}, #{gradeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.oa.bean.Employees">
    insert into employees
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="eAccount != null">
        e_account,
      </if>
      <if test="eId != null">
        e_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="ePassword != null">
        e_password,
      </if>
      <if test="idCardNo != null">
        id_card_no,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="lowSalary != null">
        low_salary,
      </if>
      <if test="contractNum != null">
        contract_num,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eAccount != null">
        #{eAccount,jdbcType=VARCHAR},
      </if>
      <if test="eId != null">
        #{eId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="ePassword != null">
        #{ePassword,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null">
        #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="lowSalary != null">
        #{lowSalary,jdbcType=DOUBLE},
      </if>
      <if test="contractNum != null">
        #{contractNum,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oa.bean.EmployeesExample" resultType="java.lang.Integer">
    select count(*) from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employees
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eAccount != null">
        e_account = #{record.eAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.eId != null">
        e_id = #{record.eId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.ePassword != null">
        e_password = #{record.ePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardNo != null">
        id_card_no = #{record.idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNum != null">
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.dept != null">
        dept = #{record.dept,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.lowSalary != null">
        low_salary = #{record.lowSalary,jdbcType=DOUBLE},
      </if>
      <if test="record.contractNum != null">
        contract_num = #{record.contractNum,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeId != null">
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employees
    set id = #{record.id,jdbcType=INTEGER},
      e_account = #{record.eAccount,jdbcType=VARCHAR},
      e_id = #{record.eId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=VARCHAR},
      e_password = #{record.ePassword,jdbcType=VARCHAR},
      id_card_no = #{record.idCardNo,jdbcType=VARCHAR},
      phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      dept = #{record.dept,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      low_salary = #{record.lowSalary,jdbcType=DOUBLE},
      contract_num = #{record.contractNum,jdbcType=VARCHAR},
      grade_id = #{record.gradeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oa.bean.Employees">
    update employees
    <set>
      <if test="eAccount != null">
        e_account = #{eAccount,jdbcType=VARCHAR},
      </if>
      <if test="eId != null">
        e_id = #{eId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="ePassword != null">
        e_password = #{ePassword,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null">
        id_card_no = #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="lowSalary != null">
        low_salary = #{lowSalary,jdbcType=DOUBLE},
      </if>
      <if test="contractNum != null">
        contract_num = #{contractNum,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oa.bean.Employees">
    update employees
    set e_account = #{eAccount,jdbcType=VARCHAR},
      e_id = #{eId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      e_password = #{ePassword,jdbcType=VARCHAR},
      id_card_no = #{idCardNo,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      dept = #{dept,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      low_salary = #{lowSalary,jdbcType=DOUBLE},
      contract_num = #{contractNum,jdbcType=VARCHAR},
      grade_id = #{gradeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.oa.bean.Employees">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="e_account" jdbcType="VARCHAR" property="eAccount" />
    <result column="e_id" jdbcType="VARCHAR" property="eId" />
    <result column="e_password" jdbcType="VARCHAR" property="ePassword" />
    <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="dept" jdbcType="VARCHAR" property="dept" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="low_salary" jdbcType="DOUBLE" property="lowSalary" />
    <result column="contract_num" jdbcType="VARCHAR" property="contractNum" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, e_account, e_id, e_password, id_card_no, phone_num, email, bank_account, dept, 
    position, low_salary, contract_num, grade_id
  </sql>
  <select id="selectByExample" parameterType="com.oa.bean.EmployeesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employees
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employees
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oa.bean.EmployeesExample">
    delete from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oa.bean.Employees">
    insert into employees (id, e_account, e_id, 
      e_password, id_card_no, phone_num, 
      email, bank_account, dept, 
      position, low_salary, contract_num, 
      grade_id)
    values (#{id,jdbcType=INTEGER}, #{eAccount,jdbcType=VARCHAR}, #{eId,jdbcType=VARCHAR}, 
      #{ePassword,jdbcType=VARCHAR}, #{idCardNo,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, #{dept,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{lowSalary,jdbcType=DOUBLE}, #{contractNum,jdbcType=VARCHAR}, 
      #{gradeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.oa.bean.Employees">
    insert into employees
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="eAccount != null">
        e_account,
      </if>
      <if test="eId != null">
        e_id,
      </if>
      <if test="ePassword != null">
        e_password,
      </if>
      <if test="idCardNo != null">
        id_card_no,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="lowSalary != null">
        low_salary,
      </if>
      <if test="contractNum != null">
        contract_num,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eAccount != null">
        #{eAccount,jdbcType=VARCHAR},
      </if>
      <if test="eId != null">
        #{eId,jdbcType=VARCHAR},
      </if>
      <if test="ePassword != null">
        #{ePassword,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null">
        #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="lowSalary != null">
        #{lowSalary,jdbcType=DOUBLE},
      </if>
      <if test="contractNum != null">
        #{contractNum,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oa.bean.EmployeesExample" resultType="java.lang.Integer">
    select count(*) from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employees
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eAccount != null">
        e_account = #{record.eAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.eId != null">
        e_id = #{record.eId,jdbcType=VARCHAR},
      </if>
      <if test="record.ePassword != null">
        e_password = #{record.ePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardNo != null">
        id_card_no = #{record.idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNum != null">
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.dept != null">
        dept = #{record.dept,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.lowSalary != null">
        low_salary = #{record.lowSalary,jdbcType=DOUBLE},
      </if>
      <if test="record.contractNum != null">
        contract_num = #{record.contractNum,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeId != null">
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employees
    set id = #{record.id,jdbcType=INTEGER},
      e_account = #{record.eAccount,jdbcType=VARCHAR},
      e_id = #{record.eId,jdbcType=VARCHAR},
      e_password = #{record.ePassword,jdbcType=VARCHAR},
      id_card_no = #{record.idCardNo,jdbcType=VARCHAR},
      phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      dept = #{record.dept,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      low_salary = #{record.lowSalary,jdbcType=DOUBLE},
      contract_num = #{record.contractNum,jdbcType=VARCHAR},
      grade_id = #{record.gradeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oa.bean.Employees">
    update employees
    <set>
      <if test="eAccount != null">
        e_account = #{eAccount,jdbcType=VARCHAR},
      </if>
      <if test="eId != null">
        e_id = #{eId,jdbcType=VARCHAR},
      </if>
      <if test="ePassword != null">
        e_password = #{ePassword,jdbcType=VARCHAR},
      </if>
      <if test="idCardNo != null">
        id_card_no = #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="lowSalary != null">
        low_salary = #{lowSalary,jdbcType=DOUBLE},
      </if>
      <if test="contractNum != null">
        contract_num = #{contractNum,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oa.bean.Employees">
    update employees
    set e_account = #{eAccount,jdbcType=VARCHAR},
      e_id = #{eId,jdbcType=VARCHAR},
      e_password = #{ePassword,jdbcType=VARCHAR},
      id_card_no = #{idCardNo,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      dept = #{dept,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      low_salary = #{lowSalary,jdbcType=DOUBLE},
      contract_num = #{contractNum,jdbcType=VARCHAR},
      grade_id = #{gradeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>